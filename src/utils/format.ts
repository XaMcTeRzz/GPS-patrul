import { type PatrolPoint } from '@/types/patrol-types';

export const formatCoordinate = (value: number): string => {
  return value.toString().replace(/^0+/, '');
};

export const formatTime = (minutes: number): string => {
  return minutes.toString().replace(/^0+/, '');
};

export const formatReport = (patrolPoints: PatrolPoint[]) => {
  const completedPoints = patrolPoints.filter(point => point.isCompleted);
  const missedPoints = patrolPoints.filter(point => !point.isCompleted);
  
  let report = 'üìä –ó–≤—ñ—Ç –ø—Ä–æ –ø–∞—Ç—Ä—É–ª—é–≤–∞–Ω–Ω—è:\n\n';
  
  if (completedPoints.length > 0) {
    report += '‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ —Ç–æ—á–∫–∏:\n';
    completedPoints.forEach(point => {
      report += `‚Ä¢ ${point.name} (${formatTime(point.timeMinutes)} —Ö–≤)\n`;
    });
    report += '\n';
  }
  
  if (missedPoints.length > 0) {
    report += '‚ùå –ù–µ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ —Ç–æ—á–∫–∏:\n';
    missedPoints.forEach(point => {
      report += `‚Ä¢ ${point.name} (${formatTime(point.timeMinutes)} —Ö–≤)\n`;
    });
  }
  
  report += `\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n`;
  report += `‚Ä¢ –í—Å—å–æ–≥–æ —Ç–æ—á–æ–∫: ${patrolPoints.length}\n`;
  report += `‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ: ${completedPoints.length}\n`;
  report += `‚Ä¢ –ù–µ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ: ${missedPoints.length}\n`;
  
  return report;
}; 